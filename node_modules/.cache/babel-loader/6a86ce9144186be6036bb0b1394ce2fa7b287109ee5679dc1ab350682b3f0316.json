{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RTD0224\\\\source\\\\repos\\\\nail-salon-web\\\\src\\\\components\\\\Services.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { FaMapMarkerAlt, FaCalendarAlt, FaChevronRight, FaUser } from 'react-icons/fa';\nimport { GiNails } from 'react-icons/gi';\nimport './css/Services.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = axios.create({\n  baseURL: 'http://localhost:5118/api' // Địa chỉ backend\n});\nconst Services = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    selectedServices = [],\n    totalPayment = 0\n  } = location.state || {};\n  const [showTechnician, setShowTechnician] = useState(false);\n  const [selectedTechnician, setSelectedTechnician] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [dates, setDates] = useState([]);\n  const [showDates, setShowDates] = useState(false);\n  const [error, setError] = useState({\n    service: false,\n    technician: false,\n    date: false,\n    time: false\n  });\n  const [timeSlots, setTimeSlots] = useState([]);\n  const [selectedTime, setSelectedTime] = useState(null);\n  const technicians = [{\n    id: 1,\n    name: \"Wendy\",\n    image: '/images/people.png',\n    availability: [0, 1, 2, 3, 4, 5, 6]\n  }, {\n    id: 2,\n    name: \"Trung\",\n    image: '/images/people.png',\n    availability: [0, 1, 2, 3, 4, 5]\n  }, {\n    id: 3,\n    name: \"Kelly\",\n    image: '/images/people.png',\n    availability: [0, 1, 2, 3, 4, 5]\n  }, {\n    id: 4,\n    name: \"Ken\",\n    image: '/images/people.png',\n    availability: [0, 1, 2, 3, 4, 5]\n  }, {\n    id: 5,\n    name: \"Tina\",\n    image: '/images/people.png',\n    availability: [0, 1, 2, 3, 4, 5, 6]\n  }];\n  const formatDate = date => {\n    const options = {\n      weekday: 'short',\n      day: 'numeric',\n      month: 'numeric'\n    };\n    return date.toLocaleDateString('en-CA', options);\n  };\n  const getDayStatus = date => {\n    const today = new Date();\n    if (date.toDateString() === today.toDateString()) {\n      return {\n        label: \"Today\",\n        className: \"today-status\"\n      };\n    } else if (date.getDay() === 0 || date.getDay() === 6) {\n      return {\n        label: \"Weekend\",\n        className: \"weekend-status\"\n      };\n    }\n    return {\n      label: \"Weekday\",\n      className: \"weekday-status\"\n    };\n  };\n  const getTimeSlots = date => {\n    const dayOfWeek = date.getDay();\n    let startTime, endTime;\n    if (dayOfWeek === 0) {\n      startTime = \"10:00\";\n      endTime = \"17:00\";\n    } else if (dayOfWeek === 6) {\n      startTime = \"09:30\";\n      endTime = \"18:00\";\n    } else {\n      startTime = \"09:30\";\n      endTime = \"19:00\";\n    }\n    const times = [];\n    let current = new Date(date);\n    current.setHours(parseInt(startTime.split(':')[0]), parseInt(startTime.split(':')[1]), 0, 0);\n    const end = new Date(date);\n    end.setHours(parseInt(endTime.split(':')[0]), parseInt(endTime.split(':')[1]), 0, 0);\n    while (current <= end) {\n      times.push(new Date(current));\n      current.setMinutes(current.getMinutes() + 20); // 20-minute intervals\n    }\n    return times;\n  };\n  useEffect(() => {\n    const generateDates = () => {\n      const currentDate = new Date();\n      const newDates = [];\n      for (let i = 0; i < 7; i++) {\n        const date = new Date(currentDate);\n        date.setDate(currentDate.getDate() + i);\n        newDates.push(date);\n      }\n      setDates(newDates);\n    };\n    generateDates();\n  }, []);\n  useEffect(() => {\n    if (selectedDate && selectedTechnician) {\n      const availableSlots = getTimeSlots(selectedDate);\n      setTimeSlots(availableSlots);\n    }\n  }, [selectedDate, selectedTechnician]);\n  const handleViewAllServices = () => {\n    navigate('/all-services', {\n      state: {\n        selectedServices\n      }\n    });\n  };\n  const toggleTechnicianDropdown = () => {\n    setShowTechnician(!showTechnician);\n  };\n  const handleTechnicianSelect = technician => {\n    setSelectedTechnician(technician);\n    setShowTechnician(false);\n  };\n  const toggleDateDropdown = () => {\n    setShowDates(!showDates);\n  };\n  const handleDateSelect = date => {\n    setSelectedDate(date);\n    setShowDates(false);\n    setSelectedTime(null); // Reset the selected time when a new date is picked\n  };\n  const handleTimeSelect = time => {\n    setSelectedTime(time);\n  };\n  const isTimeSlotAvailable = time => {\n    const now = new Date();\n    return time > now; // Kiểm tra nếu thời gian đã qua chưa\n  };\n  const handleConfirmBooking = async () => {\n    // Thêm 'async' ở đây\n    const errors = {\n      service: selectedServices.length === 0,\n      technician: !selectedTechnician,\n      date: !selectedDate,\n      time: !selectedTime\n    };\n    setError(errors);\n    if (!errors.service && !errors.technician && !errors.date && !errors.time) {\n      const bookingData = {\n        technicianId: selectedTechnician.id,\n        serviceId: selectedServices[0].id,\n        // Giả sử người dùng chỉ chọn một dịch vụ\n        startTime: selectedDate.toISOString().slice(0, 10) + 'T' + selectedTime.toLocaleTimeString([], {\n          hour12: false\n        }) + ':00',\n        duration: 20,\n        // Thời gian mặc định hoặc lấy từ dịch vụ\n        customerName: 'Nguyen Van A' // Bạn có thể thay đổi hoặc lấy từ input người dùng\n      };\n      try {\n        const response = await api.post('/bookings', bookingData); // Chỗ này đã sử dụng await nên cần async ở hàm trên\n        if (response.data.isSuccess) {\n          navigate('/thank-you', {\n            state: {\n              selectedServices,\n              totalPayment: selectedServices.reduce((total, service) => total + parseFloat(service.price), 0),\n              selectedTechnician,\n              selectedDate,\n              selectedTime\n            }\n          });\n        } else {\n          alert(response.data.message);\n        }\n      } catch (error) {\n        console.error('Error creating booking:', error);\n        alert('Đã xảy ra lỗi khi đặt lịch.');\n      }\n    } else {\n      alert('Vui lòng hoàn tất tất cả các trường bắt buộc.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"booking-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"booking-header\",\n      children: \"Booking Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-number\",\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Salon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(FaMapMarkerAlt, {\n            className: \"mr-2 text-pink-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"292 Stone Rd W Unit 7A, Guelph, ON N1G 3C4, Canada\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `step-container ${error.service ? 'error-border' : ''}`,\n      onClick: handleViewAllServices,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-number\",\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Choose Service\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(GiNails, {\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this), selectedServices.length === 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"View All Services\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Selected \", selectedServices.length, \" Services\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FaChevronRight, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this), selectedServices.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-services-list\",\n      children: [selectedServices.map((service, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-service-item\",\n        children: service.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"total-payment\",\n        children: [\"Total Payment: $\", totalPayment.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `step-container ${error.technician ? 'error-border' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-number\",\n          children: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Choose Date, Time & Stylist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-content technician-dropdown\",\n        onClick: toggleTechnicianDropdown,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(FaUser, {\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: selectedTechnician ? selectedTechnician.name : \"Nail Technician\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FaChevronRight, {\n            className: `ml-auto technician-arrow ${showTechnician ? \"rotate-down\" : \"rotate-right\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this), showTechnician && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"technician-carousel\",\n        children: technicians.map((tech, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `technician-option ${(selectedTechnician === null || selectedTechnician === void 0 ? void 0 : selectedTechnician.name) === tech.name ? \"selected\" : \"\"}`,\n          onClick: () => handleTechnicianSelect(tech),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: tech.image,\n            alt: tech.name,\n            className: \"technician-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: tech.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `step-content date-dropdown ${error.date ? 'error-border' : ''}`,\n        onClick: toggleDateDropdown,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(FaCalendarAlt, {\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: selectedDate ? formatDate(selectedDate) : \"Select a Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FaChevronRight, {\n            className: `ml-auto date-arrow ${showDates ? \"rotate-down\" : \"rotate-right\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this), showDates && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-list\",\n        children: dates.map((date, index) => {\n          const {\n            label,\n            className\n          } = getDayStatus(date);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `date-item ${(selectedDate === null || selectedDate === void 0 ? void 0 : selectedDate.toDateString()) === date.toDateString() ? \"selected\" : \"\"}`,\n            onClick: () => handleDateSelect(date),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: formatDate(date)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: className,\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 21\n      }, this), selectedDate && selectedTechnician && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select a Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-slots\",\n          children: timeSlots.map((time, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `time-slot ${(selectedTime === null || selectedTime === void 0 ? void 0 : selectedTime.getTime()) === time.getTime() ? \"selected\" : \"\"} ${!isTimeSlotAvailable(time) ? \"unavailable\" : \"\"}`,\n            onClick: () => isTimeSlotAvailable(time) && handleTimeSelect(time),\n            children: time.toLocaleTimeString([], {\n              hour: '2-digit',\n              minute: '2-digit'\n            })\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"confirm-button enabled\",\n      onClick: handleConfirmBooking,\n      children: \"Confirm Booking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"note-text\",\n      children: \"You can cancel or reschedule without any fee.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 9\n  }, this);\n};\n_s(Services, \"qatoDaLON2v/n+UnF3SiJQN8bzo=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Services;\nexport default Services;\nvar _c;\n$RefreshReg$(_c, \"Services\");","map":{"version":3,"names":["React","useState","useEffect","axios","useLocation","useNavigate","FaMapMarkerAlt","FaCalendarAlt","FaChevronRight","FaUser","GiNails","jsxDEV","_jsxDEV","api","create","baseURL","Services","_s","location","navigate","selectedServices","totalPayment","state","showTechnician","setShowTechnician","selectedTechnician","setSelectedTechnician","selectedDate","setSelectedDate","dates","setDates","showDates","setShowDates","error","setError","service","technician","date","time","timeSlots","setTimeSlots","selectedTime","setSelectedTime","technicians","id","name","image","availability","formatDate","options","weekday","day","month","toLocaleDateString","getDayStatus","today","Date","toDateString","label","className","getDay","getTimeSlots","dayOfWeek","startTime","endTime","times","current","setHours","parseInt","split","end","push","setMinutes","getMinutes","generateDates","currentDate","newDates","i","setDate","getDate","availableSlots","handleViewAllServices","toggleTechnicianDropdown","handleTechnicianSelect","toggleDateDropdown","handleDateSelect","handleTimeSelect","isTimeSlotAvailable","now","handleConfirmBooking","errors","length","bookingData","technicianId","serviceId","toISOString","slice","toLocaleTimeString","hour12","duration","customerName","response","post","data","isSuccess","reduce","total","parseFloat","price","alert","message","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","toFixed","tech","src","alt","getTime","hour","minute","_c","$RefreshReg$"],"sources":["C:/Users/RTD0224/source/repos/nail-salon-web/src/components/Services.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { FaMapMarkerAlt, FaCalendarAlt, FaChevronRight, FaUser } from 'react-icons/fa';\r\nimport { GiNails } from 'react-icons/gi';\r\nimport './css/Services.css';\r\n\r\n\r\nconst api = axios.create({\r\n    baseURL: 'http://localhost:5118/api', // Địa chỉ backend\r\n});\r\n\r\nconst Services = () => {\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const { selectedServices = [], totalPayment = 0 } = location.state || {};\r\n\r\n    const [showTechnician, setShowTechnician] = useState(false);\r\n    const [selectedTechnician, setSelectedTechnician] = useState(null);\r\n    const [selectedDate, setSelectedDate] = useState(null);\r\n    const [dates, setDates] = useState([]);\r\n    const [showDates, setShowDates] = useState(false);\r\n    const [error, setError] = useState({ service: false, technician: false, date: false, time: false });\r\n    const [timeSlots, setTimeSlots] = useState([]);\r\n    const [selectedTime, setSelectedTime] = useState(null);\r\n\r\n    const technicians = [\r\n        { id: 1, name: \"Wendy\", image: '/images/people.png', availability: [0, 1, 2, 3, 4, 5, 6] },\r\n        { id: 2, name: \"Trung\", image: '/images/people.png', availability: [0,1, 2, 3, 4, 5] },\r\n        { id: 3, name: \"Kelly\", image: '/images/people.png', availability: [0,1, 2, 3, 4, 5] },\r\n        { id: 4, name: \"Ken\", image: '/images/people.png', availability: [0,1, 2, 3, 4, 5] },\r\n        { id: 5, name: \"Tina\", image: '/images/people.png', availability: [0,1, 2, 3, 4, 5, 6] }\r\n    ];\r\n\r\n    const formatDate = (date) => {\r\n        const options = { weekday: 'short', day: 'numeric', month: 'numeric' };\r\n        return date.toLocaleDateString('en-CA', options);\r\n    };\r\n\r\n    const getDayStatus = (date) => {\r\n        const today = new Date();\r\n        if (date.toDateString() === today.toDateString()) {\r\n            return { label: \"Today\", className: \"today-status\" };\r\n        } else if (date.getDay() === 0 || date.getDay() === 6) {\r\n            return { label: \"Weekend\", className: \"weekend-status\" };\r\n        }\r\n        return { label: \"Weekday\", className: \"weekday-status\" };\r\n    };\r\n\r\n    const getTimeSlots = (date) => {\r\n        const dayOfWeek = date.getDay();\r\n        let startTime, endTime;\r\n\r\n        if (dayOfWeek === 0) {\r\n            startTime = \"10:00\";\r\n            endTime = \"17:00\";\r\n        } else if (dayOfWeek === 6) {\r\n            startTime = \"09:30\";\r\n            endTime = \"18:00\";\r\n        } else {\r\n            startTime = \"09:30\";\r\n            endTime = \"19:00\";\r\n        }\r\n\r\n        const times = [];\r\n        let current = new Date(date);\r\n        current.setHours(parseInt(startTime.split(':')[0]), parseInt(startTime.split(':')[1]), 0, 0);\r\n\r\n        const end = new Date(date);\r\n        end.setHours(parseInt(endTime.split(':')[0]), parseInt(endTime.split(':')[1]), 0, 0);\r\n\r\n        while (current <= end) {\r\n            times.push(new Date(current));\r\n            current.setMinutes(current.getMinutes() + 20); // 20-minute intervals\r\n        }\r\n\r\n        return times;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const generateDates = () => {\r\n            const currentDate = new Date();\r\n            const newDates = [];\r\n            for (let i = 0; i < 7; i++) {\r\n                const date = new Date(currentDate);\r\n                date.setDate(currentDate.getDate() + i);\r\n                newDates.push(date);\r\n            }\r\n            setDates(newDates);\r\n        };\r\n\r\n        generateDates();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (selectedDate && selectedTechnician) {\r\n            const availableSlots = getTimeSlots(selectedDate);\r\n            setTimeSlots(availableSlots);\r\n        }\r\n    }, [selectedDate, selectedTechnician]);\r\n\r\n    const handleViewAllServices = () => {\r\n        navigate('/all-services', { state: { selectedServices } });\r\n    };\r\n\r\n    const toggleTechnicianDropdown = () => {\r\n        setShowTechnician(!showTechnician);\r\n    };\r\n\r\n    const handleTechnicianSelect = (technician) => {\r\n        setSelectedTechnician(technician);\r\n        setShowTechnician(false);\r\n    };\r\n\r\n    const toggleDateDropdown = () => {\r\n        setShowDates(!showDates);\r\n    };\r\n\r\n    const handleDateSelect = (date) => {\r\n        setSelectedDate(date);\r\n        setShowDates(false);\r\n        setSelectedTime(null); // Reset the selected time when a new date is picked\r\n    };\r\n\r\n    const handleTimeSelect = (time) => {\r\n        setSelectedTime(time);\r\n    };\r\n\r\n    const isTimeSlotAvailable = (time) => {\r\n        const now = new Date();\r\n        return time > now; // Kiểm tra nếu thời gian đã qua chưa\r\n    };\r\n\r\n\r\n    const handleConfirmBooking = async () => { // Thêm 'async' ở đây\r\n        const errors = {\r\n            service: selectedServices.length === 0,\r\n            technician: !selectedTechnician,\r\n            date: !selectedDate,\r\n            time: !selectedTime,\r\n        };\r\n\r\n        setError(errors);\r\n\r\n        if (!errors.service && !errors.technician && !errors.date && !errors.time) {\r\n            const bookingData = {\r\n                technicianId: selectedTechnician.id,\r\n                serviceId: selectedServices[0].id, // Giả sử người dùng chỉ chọn một dịch vụ\r\n                startTime: selectedDate.toISOString().slice(0, 10) + 'T' + selectedTime.toLocaleTimeString([], { hour12: false }) + ':00',\r\n                duration: 20, // Thời gian mặc định hoặc lấy từ dịch vụ\r\n                customerName: 'Nguyen Van A' // Bạn có thể thay đổi hoặc lấy từ input người dùng\r\n            };\r\n\r\n            try {\r\n                const response = await api.post('/bookings', bookingData); // Chỗ này đã sử dụng await nên cần async ở hàm trên\r\n                if (response.data.isSuccess) {\r\n                    navigate('/thank-you', {\r\n                        state: {\r\n                            selectedServices,\r\n                            totalPayment: selectedServices.reduce((total, service) => total + parseFloat(service.price), 0),\r\n                            selectedTechnician,\r\n                            selectedDate,\r\n                            selectedTime\r\n                        }\r\n                    });\r\n                } else {\r\n                    alert(response.data.message);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error creating booking:', error);\r\n                alert('Đã xảy ra lỗi khi đặt lịch.');\r\n            }\r\n        } else {\r\n            alert('Vui lòng hoàn tất tất cả các trường bắt buộc.');\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"booking-container\">\r\n            <h1 className=\"booking-header\">Booking Appointment</h1>\r\n\r\n            {/* Step 1: Select Salon */}\r\n            <div className=\"step-container\">\r\n                <div className=\"step-title\">\r\n                    <div className=\"step-number\">1</div>\r\n                    <h2>Salon</h2>\r\n                </div>\r\n                <div className=\"step-content\">\r\n                    <div className=\"flex items-center\">\r\n                        <FaMapMarkerAlt className=\"mr-2 text-pink-500\" />\r\n                        <span>292 Stone Rd W Unit 7A, Guelph, ON N1G 3C4, Canada</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Step 2: Choose Service */}\r\n            <div className={`step-container ${error.service ? 'error-border' : ''}`} onClick={handleViewAllServices}>\r\n                <div className=\"step-title\">\r\n                    <div className=\"step-number\">2</div>\r\n                    <h2>Choose Service</h2>\r\n                </div>\r\n                <div className=\"step-content\">\r\n                    <div className=\"flex items-center\">\r\n                        <GiNails className=\"mr-2\" />\r\n                        {selectedServices.length === 0 ? (\r\n                            <span>View All Services</span>\r\n                        ) : (\r\n                            <span>Selected {selectedServices.length} Services</span>\r\n                        )}\r\n                    </div>\r\n                    <FaChevronRight />\r\n                </div>\r\n            </div>\r\n\r\n            {/* Hiển thị các dịch vụ đã chọn */}\r\n            {selectedServices.length > 0 && (\r\n                <div className=\"selected-services-list\">\r\n                    {selectedServices.map((service, index) => (\r\n                        <div key={index} className=\"selected-service-item\">\r\n                            {service.name}\r\n                        </div>\r\n                    ))}\r\n                    <div className=\"total-payment\">\r\n                        Total Payment: ${totalPayment.toFixed(2)}\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Step 3: Choose Date, Time & Stylist */}\r\n            <div className={`step-container ${error.technician ? 'error-border' : ''}`}>\r\n                <div className=\"step-title\">\r\n                    <div className=\"step-number\">3</div>\r\n                    <h2>Choose Date, Time & Stylist</h2>\r\n                </div>\r\n\r\n                {/* Technician Selection */}\r\n                <div className=\"step-content technician-dropdown\" onClick={toggleTechnicianDropdown}>\r\n                    <div className=\"flex items-center\">\r\n                        <FaUser className=\"mr-2\" />\r\n                        <span>{selectedTechnician ? selectedTechnician.name : \"Nail Technician\"}</span>\r\n                        <FaChevronRight className={`ml-auto technician-arrow ${showTechnician ? \"rotate-down\" : \"rotate-right\"}`} />\r\n                    </div>\r\n                </div>\r\n                {showTechnician && (\r\n                    <div className=\"technician-carousel\">\r\n                        {technicians.map((tech, index) => (\r\n                            <div\r\n                                key={index}\r\n                                className={`technician-option ${selectedTechnician?.name === tech.name ? \"selected\" : \"\"}`}\r\n                                onClick={() => handleTechnicianSelect(tech)}\r\n                            >\r\n                                <img src={tech.image} alt={tech.name} className=\"technician-image\" />\r\n                                <span>{tech.name}</span>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n\r\n                {/* Date Selection */}\r\n                <div className={`step-content date-dropdown ${error.date ? 'error-border' : ''}`} onClick={toggleDateDropdown}>\r\n                    <div className=\"flex items-center\">\r\n                        <FaCalendarAlt className=\"mr-2\" />\r\n                        <span>{selectedDate ? formatDate(selectedDate) : \"Select a Date\"}</span>\r\n                        <FaChevronRight className={`ml-auto date-arrow ${showDates ? \"rotate-down\" : \"rotate-right\"}`} />\r\n                    </div>\r\n                </div>\r\n                {showDates && (\r\n                    <div className=\"date-list\">\r\n                        {dates.map((date, index) => {\r\n                            const { label, className } = getDayStatus(date);\r\n                            return (\r\n                                <div\r\n                                    key={index}\r\n                                    className={`date-item ${selectedDate?.toDateString() === date.toDateString() ? \"selected\" : \"\"}`}\r\n                                    onClick={() => handleDateSelect(date)}\r\n                                >\r\n                                    <span>{formatDate(date)}</span>\r\n                                    <span className={className}>{label}</span>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                )}\r\n\r\n                {/* Time Selection */}\r\n                {selectedDate && selectedTechnician && (\r\n                    <div className=\"time-selection\">\r\n                        <h3>Select a Time</h3>\r\n                        <div className=\"time-slots\">\r\n                            {timeSlots.map((time, index) => (\r\n                                <div\r\n                                    key={index}\r\n                                    className={`time-slot ${selectedTime?.getTime() === time.getTime() ? \"selected\" : \"\"} ${!isTimeSlotAvailable(time) ? \"unavailable\" : \"\"}`}\r\n                                    onClick={() => isTimeSlotAvailable(time) && handleTimeSelect(time)}\r\n                                >\r\n                                    {time.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Confirm Button */}\r\n            <button className=\"confirm-button enabled\" onClick={handleConfirmBooking}>\r\n                Confirm Booking\r\n            </button>\r\n            <p className=\"note-text\">You can cancel or reschedule without any fee.</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Services;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}