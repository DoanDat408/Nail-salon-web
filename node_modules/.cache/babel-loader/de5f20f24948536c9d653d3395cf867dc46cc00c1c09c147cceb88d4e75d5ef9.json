{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RTD0224\\\\source\\\\repos\\\\nail-salon-web\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './css/Login.css';\nimport { FaGoogle } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  setIsAuthenticated,\n  setUsername\n}) => {\n  _s();\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    const loginData = {\n      phoneNumber,\n      password\n    };\n    try {\n      const response = await fetch('http://localhost:5118/api/Auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(loginData)\n      });\n      if (response.ok) {\n        const loginData = await response.json();\n\n        // Lưu token và refresh token vào localStorage\n        localStorage.setItem('token', loginData.token);\n        if (loginData.refreshToken) {\n          localStorage.setItem('refreshToken', loginData.refreshToken);\n        }\n\n        // Gọi API để lấy thông tin người dùng\n        await fetchUserInfo();\n      } else {\n        alert('Invalid credentials');\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n      alert('An error occurred during login. Please try again.');\n    }\n  };\n  const fetchUserInfo = async () => {\n    const token = localStorage.getItem('token');\n    try {\n      const userInfoResponse = await fetch('http://localhost:5118/api/Auth/userinfo', {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (userInfoResponse.ok) {\n        const userInfo = await userInfoResponse.json();\n        localStorage.setItem('username', userInfo.userName);\n        setUsername(userInfo.userName); // Cập nhật state với username\n        setIsAuthenticated(true);\n        navigate('/'); // Chuyển hướng sau khi đăng nhập thành công\n      } else if (userInfoResponse.status === 401) {\n        // Nếu nhận được 401, thử refresh token\n        await handleRefreshToken();\n      } else {\n        alert('Failed to fetch user info');\n      }\n    } catch (error) {\n      console.error('Error fetching user info:', error);\n    }\n  };\n\n  // Hàm này được gọi khi token hết hạn\n  const handleRefreshToken = async () => {\n    const refreshToken = localStorage.getItem('refreshToken');\n    if (!refreshToken) {\n      alert('Session expired. Please log in again.');\n      navigate('/login'); // Chuyển hướng về trang đăng nhập\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5118/api/Auth/refresh-token', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          refreshToken\n        })\n      });\n      if (response.ok) {\n        const refreshData = await response.json();\n        localStorage.setItem('token', refreshData.token); // Cập nhật token mới\n        if (refreshData.refreshToken) {\n          localStorage.setItem('refreshToken', refreshData.refreshToken); // Cập nhật refresh token nếu có\n        }\n\n        // Sau khi refresh token, thử lại yêu cầu lấy thông tin người dùng\n        await fetchUserInfo();\n      } else {\n        alert('Failed to refresh token');\n        navigate('/login'); // Chuyển hướng về trang đăng nhập\n      }\n    } catch (error) {\n      console.error('Error during token refresh:', error);\n      alert('An error occurred while refreshing token. Please log in again.');\n      navigate('/'); // Chuyển hướng về trang đăng nhập\n    }\n  };\n  const handleGoogleLogin = () => {\n    alert('Google login functionality here');\n  };\n  const handleRegister = () => {\n    navigate('/register'); // Chuyển hướng tới trang đăng ký\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Phone Number:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: phoneNumber,\n            onChange: e => setPhoneNumber(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-button\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"separator\",\n        children: \"or\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"google-button\",\n        onClick: handleGoogleLogin,\n        children: [/*#__PURE__*/_jsxDEV(FaGoogle, {\n          className: \"google-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), \" Sign in with Google\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-register-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Don't have an account?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"register-button\",\n          onClick: handleRegister,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"PTiB+8STQQwrqrxK/s+GNMZsgqo=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","FaGoogle","jsxDEV","_jsxDEV","Login","setIsAuthenticated","setUsername","_s","phoneNumber","setPhoneNumber","password","setPassword","navigate","handleLogin","e","preventDefault","loginData","response","fetch","method","headers","body","JSON","stringify","ok","json","localStorage","setItem","token","refreshToken","fetchUserInfo","alert","error","console","getItem","userInfoResponse","userInfo","userName","status","handleRefreshToken","refreshData","handleGoogleLogin","handleRegister","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/RTD0224/source/repos/nail-salon-web/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './css/Login.css';\r\nimport { FaGoogle } from 'react-icons/fa';\r\n\r\nconst Login = ({ setIsAuthenticated, setUsername }) => {\r\n    const [phoneNumber, setPhoneNumber] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const loginData = {\r\n            phoneNumber,\r\n            password,\r\n        };\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5118/api/Auth/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(loginData),\r\n            });\r\n\r\n            if (response.ok) {\r\n                const loginData = await response.json();\r\n\r\n                // Lưu token và refresh token vào localStorage\r\n                localStorage.setItem('token', loginData.token);\r\n                if (loginData.refreshToken) {\r\n                    localStorage.setItem('refreshToken', loginData.refreshToken);\r\n                }\r\n\r\n                // Gọi API để lấy thông tin người dùng\r\n                await fetchUserInfo();\r\n            } else {\r\n                alert('Invalid credentials');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error during login:', error);\r\n            alert('An error occurred during login. Please try again.');\r\n        }\r\n    };\r\n\r\n    const fetchUserInfo = async () => {\r\n        const token = localStorage.getItem('token');\r\n\r\n        try {\r\n            const userInfoResponse = await fetch('http://localhost:5118/api/Auth/userinfo', {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                },\r\n            });\r\n\r\n            if (userInfoResponse.ok) {\r\n                const userInfo = await userInfoResponse.json();\r\n                localStorage.setItem('username', userInfo.userName);\r\n                setUsername(userInfo.userName); // Cập nhật state với username\r\n                setIsAuthenticated(true);\r\n                navigate('/'); // Chuyển hướng sau khi đăng nhập thành công\r\n            } else if (userInfoResponse.status === 401) {\r\n                // Nếu nhận được 401, thử refresh token\r\n                await handleRefreshToken();\r\n            } else {\r\n                alert('Failed to fetch user info');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching user info:', error);\r\n        }\r\n    };\r\n\r\n    // Hàm này được gọi khi token hết hạn\r\n    const handleRefreshToken = async () => {\r\n        const refreshToken = localStorage.getItem('refreshToken');\r\n        if (!refreshToken) {\r\n            alert('Session expired. Please log in again.');\r\n            navigate('/login'); // Chuyển hướng về trang đăng nhập\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5118/api/Auth/refresh-token', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ refreshToken }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                const refreshData = await response.json();\r\n                localStorage.setItem('token', refreshData.token); // Cập nhật token mới\r\n                if (refreshData.refreshToken) {\r\n                    localStorage.setItem('refreshToken', refreshData.refreshToken); // Cập nhật refresh token nếu có\r\n                }\r\n\r\n                // Sau khi refresh token, thử lại yêu cầu lấy thông tin người dùng\r\n                await fetchUserInfo();\r\n            } else {\r\n                alert('Failed to refresh token');\r\n                navigate('/login'); // Chuyển hướng về trang đăng nhập\r\n            }\r\n        } catch (error) {\r\n            console.error('Error during token refresh:', error);\r\n            alert('An error occurred while refreshing token. Please log in again.');\r\n            navigate('/'); // Chuyển hướng về trang đăng nhập\r\n        }\r\n    };\r\n\r\n    const handleGoogleLogin = () => {\r\n        alert('Google login functionality here');\r\n    };\r\n\r\n    const handleRegister = () => {\r\n        navigate('/register'); // Chuyển hướng tới trang đăng ký\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-page\">\r\n            <div className=\"login-container\">\r\n                <h2>Login</h2>\r\n                <form onSubmit={handleLogin}>\r\n                    <div className=\"form-group\">\r\n                        <label>Phone Number:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={phoneNumber}\r\n                            onChange={(e) => setPhoneNumber(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Password:</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"login-button\">Login</button>\r\n                </form>\r\n                <div className=\"separator\">or</div>\r\n                <button className=\"google-button\" onClick={handleGoogleLogin}>\r\n                    <FaGoogle className=\"google-icon\" /> Sign in with Google\r\n                </button>\r\n                <div className=\"login-register-container\">\r\n                    <p>Don't have an account?</p>\r\n                    <button className=\"register-button\" onClick={handleRegister}>Register</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}